---
title: Welcome!
---

## Markdown

This is what a typical lesson looks like, created with the *markdown* format.

> We can convey information through a variety of ways, instead of just boring old plaintext.

<Note icon="info">

However, we aren't just limited to markdown-- we're able to include custom components that allow our students to interact with our content-- such as this fancy info container.

</Note>


## Code Execution

Try running (and editing!) the code below.

<EditableCode fixedOutputHeight={1} fixedHeight={6}>

```python
import math

def area_of_sphere(radius):
    return 4 / 3 * math.pi * radius ** 3

print(area_of_sphere(100))
```

</EditableCode>

## Quizzes

This quiz quickly checks the reader's understanding of a concept-- typically done at the end of a lesson, and provides immediate feedback.

<Quiz
    answers={[
        "raw_input",
        "input",
        "get_input",
        "scan"
    ]}
    correctAnswerIndex={1}
>
Which of the following functions are used to get user input?
<div slot="explanation">

`raw_input` was renamed to `input` in Python 3 (the version we are using). `get_input` and `scan` are not builtin functions.

</div>
</Quiz>

Shown below is an example of a free-response quiz-- in this scenario, students complete a function, and upon submitting the code, our platform will automatically test the function with hidden test cases to ensure the student answered the problem correctly.

<EditableCode fixedOutputHeight={1} fixedHeight={2} problemId="0">

```python
def area_of_square(side_length):
    return side_length ** 2
```

</EditableCode>

Here's another free-response quiz-- but this time, our platform will automatically test the program with test values for the input functions used.

<EditableCode fixedOutputHeight={1} fixedHeight={3} problemId="1">

```python
length = int(input('Enter rectangle length: '))
width = int(input('Enter rectangle width: '))
print(length * width)
```

</EditableCode>