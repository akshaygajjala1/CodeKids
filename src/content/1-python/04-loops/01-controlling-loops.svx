---
title: Controlling Loops
---

## Breaking Loops

In Python, loop control statements allow you to alter the normal flow of a loop. The two key statements for controlling loops are:
1. `Breaks`
2. `Continue(s)`

First, we'll be focusing on `breaks`.

The `break` statement is used to exit a loop prematurely when a certain condition is met.

<EditableCode fixedHeight={4} fixedOutputHeight={5}>

```python
for i in range(10):
    if i == 5:
        break
    print(i)
```

</EditableCode>

In this example, the loop stops when `i` equals 5.

## Continuing Loops

The `continue` statement is used to skip the rest of the code inside the loop for the current iteration and move on to the next iteration.

<EditableCode fixedHeight={4} fixedOutputHeight={5}>

```python
for i in range(10):
    if i % 2 == 0:
        continue
    print(i)
```

</EditableCode>

In this example, even numbers are skipped, so only odd numbers are printed.

<Note icon="help">

Use `break` and `continue` to control loop execution and optimize your code efficiently.

</Note>