---
title: Data Types
---

## Data Types In Python

In Python there are different forms of data, called data types. Data types are integral to the understand of how to manipulate and interact with data, one of the key fundamentals of programming. Different data types have different uses. Think of it like this: you wouldn't use a number to describe your favorite food, you would use words, or a "String" as it's called in Python.

## Different Data Types

There are many different data types in python. In this course, we'll be looking at 4 of the most important ones; Strings, Integers, Floats, and Booleans.

### Strings 

A string (or str) is a series of letters used as text in Python. In Python, strings can be enclosed in single or double quotes. 
In our last lesson, we learned how to declare variables. Now, we'll learn how to assign a String data type to a variable and then edit these String variables.

<EditableCode fixedOutputHeight={1} fixedHeight={3}>

```python
string1 = "Hello"
string2 = " World!"
print(string1 + string2)
``` 

</EditableCode>

In this example, two variables are declared and assigned string values: string1 and string2.
We then use the `+` sign to concatentate[^1] the two strings together, and then print the result of that operation.
We will go over string operations in a coming lesson, but it should be clear that the `+` operator will concatenate
(add) two strings together.

### Integers

Integers in python can be positive or negative numbers, but they must be whole numbers.
They are useful for storing numerical data and doing calculations with them. 

<EditableCode fixedOutputHeight={3} fixedHeight={5}>

```python
x = 20
y = 10
print(x + y)
print(x - y)
print(x * y)
``` 

</EditableCode>

By declaring two variables, x and y, and setting them to numerical values, Python automatically identifies them as integers.
You can see how we are able to do basic math operations with integers, such as addition, subtraction, and multiplication.

### Floats

Floating-point numbers (floats for short) are numbers (like integers), but instead of being limited to non-decimal numbers, 
you are able to represent any real[^2] number with floats.

<EditableCode fixedOutputHeight={3} fixedHeight={5}>

```python
x = 1.5
y = 0.5
print(x + y)
print(x - y)
print(x * y)
``` 

</EditableCode>

Two decimal float values are assigned to variables x and y. Notice how the result of a math operation with 
floating-point numbers is also a floating-point number, even if it can be simplified to a whole number.

### Booleans

Booleans can either be true or false. They are usually used to check conditional statements and to conduct logic in python.

<EditableCode fixedOutputHeight={2} fixedHeight={4}>

```python
x = True  # must be capitalized!
y = False
print(x)
print(y)
``` 

</EditableCode>

In this example, the variables `x` and `y` are set to `True` and `False`, respectively.

[^1]: Concatentate means to "add" two strings together.
[^2]: A real number is any positive or negative number and can be a rational or irrational number. Typically,
these are the numbers you will deal with almost all of the time during school.